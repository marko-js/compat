$ const colorsArray = ["red", "green", "blue"];
$ const colorCodes = {
    red: "FF0000",
    green: "00FF00",
    blue: "0000FF"
};
$ const listSize = 3;
static function noop() {}
static function evenItemsIterator(items, cb) {
    for (let i = 0; i < items.length; i++) {
        if (i % 2 === 0) {
            cb(items[i]);
        }
    }
}

.array
    <for(color in colorsArray)>
        <li>${color}</li>
    </for>

.array-iterator
    <for(color in colorsArray | iterator=evenItemsIterator)>
        <li>${color}</li>
    </for>

.array-separator
    <for(color in colorsArray | separator=", ")>
        <li>${color}</li>
    </for>

.array-status-var
    <for(color in colorsArray | status-var=loop)>
        ${color}
        ${loop.getIndex()+1}) of ${loop.getLength()}
        <div if(loop.isFirst()) on-click(loop.getIndex() === 0 && "handleClick")> - FIRST</div>
        <if(loop.isLast())> - LAST</if>
        <if(!loop.isLast())> - NOT LAST</if>
    </for>

.array-iterator-and-status-var
    <for(color in colorsArray | iterator=evenItemsIterator separator=", ")>
        <li>${color}</li>
    </for>

.array-status-var-and-iterator
    <for(color in colorsArray | status-var=loop iterator=evenItemsIterator)>
        ${color}
        ${loop.getIndex()+1}) of ${loop.getLength()}
        <if(loop.isFirst())> - FIRST</if>
        <if(loop.isLast())> - LAST</if>
    </for>

.array-status-var-and-separator
    <for(color in colorsArray | status-var=loop separator=", ")>
        ${color}
        ${loop.getIndex()+1}) of ${loop.getLength()}
        <if(loop.isFirst())> - FIRST</if>
        <if(loop.isLast())> - LAST</if>
    </for>

.array-status-var-and-iterator-and-separator
    <for(color in colorsArray | status-var=loop iterator=evenItemsIterator separator=", ")>
        ${color}
        ${loop.getIndex()+1}) of ${loop.getLength()}
        <if(loop.isFirst())> - FIRST</if>
        <if(loop.isLast())> - LAST</if>
    </for>


.props
    <for(color, code in colorCodes)>
        <li>${color}: #${code}</li>
    </for>

.props-separator
    <for(color, code in colorCodes | separator=", ")>
        <li>${color}: #${code}</li>
    </for>

.props-status-var
    <for(color, code in colorCodes | status-var=loop)>
        <li>${color}: #${code}</li>
        ${loop.getIndex()+1}) of ${loop.getLength()}
        <if(loop.isFirst())> - FIRST</if>
        <if(loop.isLast())> - LAST</if>
    </for>

.props-status-var-and-separator
    <for(color, code in colorCodes | status-var=loop separator=", ")>
        <li>${color}: #${code}</li>
        ${loop.getIndex()+1}) of ${loop.getLength()}
        <if(loop.isFirst())> - FIRST</if>
        <if(loop.isLast())> - LAST</if>
    </for>

.range
    <for(i from 0 to 10)>
        <li>${i}</li>
    </for>

.statement-basic-increment
    <for(let i = 0; i < colorsArray.length; i++)>
        ${i}
    </for>

.statement-basic-increment-by-2
    <for(let i = 0; i <= listSize; i += 2)>
        ${i}
    </for>

.statement-missing-declaration
    $ let i;
    <for(i = 0; i <= listSize; i += 2)>
        ${i}
    </for>

.statement-backwards-test
    <for(var i = 0; colorsArray.length >= i; i++)>
        ${i}
    </for>

.statement-iterate-backwards
    <for(var i = colorsArray.length; i >= 0; i--)>
        ${i}
    </for>

.statement-iterate-backwards-by-2
    <for(var i = listSize; i > 0; i -= 2)>
        ${i}
    </for>

.statement-multi-declaration
    <for(var i = 0, x = 2; i < listSize; i++)>
        ${i} ${x}
    </for>

.statement-init-expression
    $ let i = 0;
    <for(noop(); i < listSize; i++)>
        ${i}
    </for>

.statement-test-expression
    <for(var i = 0; noop(); i++)>
        ${i}
    </for>

.statement-update-expression
    <for(var i = 0; i < listSize; noop())>
        $ i++;
        ${i}
    </for>

.statement-update-only
    $ let i = listSize;
    <for(;i--;)>
        ${i}
    </for>
